
# beware of the fact that all chains from one leaflet 
# need to be given in one group (but not in one atom collection since
# this would assert center-of-mass calculations [to-be-implemented])

# notice the order of groups below, it influences numbering
# in _selected_ groups given at the end of index file

# proximal acyl chain at position 2, MYH.2.C4 (chemical numbering: 2p.C4)
# proximal acyl chain at position 3, MYH.3.C4 (chemical numbering: 3p.C4)
# distal acyl primary chain at pos. 2, UDC.5.C1 (chemical numbering: 2'p.C4)
# distal acyl primary chain at pos. 3, UDC.7.C1 (chemical numbering: 3'p.C4)
# distal acyl secondary chain at pos. 2, LYM.4.C2 (chemical numbering: 2's.C2)
# distal acyl secondary chain at pos. 3, MYM.6.C2 (chemical numbering: 3's.C2)
[ _lower ]
76:36:299
114:36:299
187:36:299
266:36:299
153:36:299
226:36:299

# in upper leaflet, offset need to be added: 
# e.g. 76 + 36*299 = 76 + 10764
[ _upper ]
10840:36:299
10878:36:299
10951:36:299
11030:36:299
10917:36:299
10990:36:299

# we calculate voronoi diagram for all given points (usually:
# upper and lower leaflets) but surface area (both in histograms 
# and time series) is calculated seperatedly for each _selected_ entry
#
# numbering of points in upper/lower groups above is 1..n; 
# use these numbers and not absolute atom indices 
# (use of the first atom index of an atom group/collection is a bad
# idea as well)
#
# selections can be done for 
# * all chemically equivalent chains,
# * all chemically equiv. chains in selected molecules,
# * on molecular basis, i.e. for all chains belonging to selected molecules

# all 2p chains
[ _selected_upper-2p ]
1:36:1

[ _selected_lower-2p ]
1:36:1

# all 3p chains
[ _selected_lower-3p ]
37:36:1

[ _selected_upper-3p ]
37:36:1

# all 2'p chains
[ _selected_lower-2'p ]
73:36:1

[ _selected_upper-2'p ]
73:36:1

# all 3'p chains
[ _selected_upper-3'p ]
109:36:1

[ _selected_lower-3'p ]
109:36:1

# all 2's chains
[ _selected_upper-2's ]
145:36:1

[ _selected_lower-2's ]
145:36:1

# all 3's chains
[ _selected_upper-3's ]
181:36:1

[ _selected_lower-3's ]
181:36:1

# 3's chain with CF > 0.4
# FIXME: we pick first two from lower leaflet
[ _selected_lower-3's-gel_04 ]
6
12

# 3's chain with CF > 0.8
[ _selected_upper-3's-gel_08 ]
6
12

# all ECLA molecules (six chains each)
[ _selected_lower-ecla ]
1-6:36:6

[ _selected_upper-ecla ]
1-6:36:6

# molecules with CF > 0.4
#[ _selected_ecla-gel_04 ]
#1-6
#7-12

# three molecules with CF > 0.8
#[ _selected_ecla-gel_08 ]
#427-432

# weight entry below is given just as an illustation of a feature
# to be implemented (weighted voronoi); currently it is not used
# weights here match groups in corresponding _selected_ entry 
# (e.g. _weight_2p matches _selected_2p), notice that weights
# need to be precalculated (e.g. molecular mass of chains, 
# radius-of-gyration etc.)

# AssertionError: group has to be FLAT iterable object or an integer number but we have: 12.011
[ _weights_2p ]
1:72:0 1.0

[ _merge_ ]
upper-2p  lower-2p


